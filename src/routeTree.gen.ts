/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as DashboardRouteRouteImport } from './routes/_dashboard/route'
import { Route as DashboardIndexRouteImport } from './routes/_dashboard/index'
import { Route as DashboardSearchResultPageIndexRouteImport } from './routes/_dashboard/search-result-page/index'

const DashboardRouteRoute = DashboardRouteRouteImport.update({
  id: '/_dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardSearchResultPageIndexRoute =
  DashboardSearchResultPageIndexRouteImport.update({
    id: '/search-result-page/',
    path: '/search-result-page/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof DashboardIndexRoute
  '/search-result-page': typeof DashboardSearchResultPageIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof DashboardIndexRoute
  '/search-result-page': typeof DashboardSearchResultPageIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_dashboard': typeof DashboardRouteRouteWithChildren
  '/_dashboard/': typeof DashboardIndexRoute
  '/_dashboard/search-result-page/': typeof DashboardSearchResultPageIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/search-result-page'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/search-result-page'
  id:
    | '__root__'
    | '/_dashboard'
    | '/_dashboard/'
    | '/_dashboard/search-result-page/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_dashboard': {
      id: '/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_dashboard/': {
      id: '/_dashboard/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/_dashboard/search-result-page/': {
      id: '/_dashboard/search-result-page/'
      path: '/search-result-page'
      fullPath: '/search-result-page'
      preLoaderRoute: typeof DashboardSearchResultPageIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
  }
}

interface DashboardRouteRouteChildren {
  DashboardIndexRoute: typeof DashboardIndexRoute
  DashboardSearchResultPageIndexRoute: typeof DashboardSearchResultPageIndexRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardIndexRoute: DashboardIndexRoute,
  DashboardSearchResultPageIndexRoute: DashboardSearchResultPageIndexRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
